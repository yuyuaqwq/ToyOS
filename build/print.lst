     1                                  TI_GDT equ (0 << 2)
     2                                  RPL0 equ 0
     3                                  SELECTOR_VIDEO equ (0x0003 << 3) + TI_GDT + RPL0
     4                                  
     5                                  [bits 32]
     6                                  section .text
     7                                  
     8                                  ;----------将以0结尾的字符串写入到光标所在处----------
     9                                  ; int8* str
    10                                  global _PutStr
    11                                  _PutStr:
    12 00000000 53                          push ebx
    13 00000001 51                          push ecx
    14                                  
    15 00000002 31C9                        xor ecx, ecx
    16 00000004 8B5C240C                    mov ebx, [esp+12]       ; str
    17                                  
    18                                  .goon:
    19 00000008 8A0B                        mov cl, [ebx]
    20 0000000A 80F900                      cmp cl, 0
    21 0000000D 740C                        jz .strOver
    22 0000000F 51                          push ecx
    23 00000010 E86C000000                  call _PutChar
    24 00000015 83C404                      add esp, 4
    25 00000018 43                          inc ebx
    26 00000019 EBED                        jmp .goon
    27                                  
    28                                  .strOver:
    29 0000001B 59                          pop ecx
    30 0000001C 5B                          pop ebx
    31 0000001D C3                          ret
    32                                  
    33                                  
    34                                  ;----------将整数转为字符串写入到光标所在处----------
    35                                  section .data
    36 00000000 0000000000000000        putIntBuff dq 0
    37                                  
    38                                  section .text
    39                                  global _PutInt
    40                                  _PutInt:
    41 0000001E 60                          pushad
    42 0000001F 89E5                        mov ebp, esp
    43 00000021 8B4524                      mov eax, [ebp+4*9]
    44 00000024 89C2                        mov edx, eax
    45 00000026 BF07000000                  mov edi, 7
    46 0000002B B908000000                  mov ecx, 8
    47 00000030 BB[00000000]                mov ebx, putIntBuff
    48                                  
    49                                  .16based_4bits:
    50 00000035 83E20F                      and edx, 0x0000000f
    51 00000038 83FA09                      cmp edx, 9
    52 0000003B 7F05                        jg .isA2F
    53 0000003D 83C230                      add edx, '0'
    54 00000040 EB06                        jmp .store
    55                                  
    56                                  .isA2F:
    57 00000042 83EA0A                      sub edx, 10
    58 00000045 83C241                      add edx, 'A'
    59                                  
    60                                  .store:
    61 00000048 88143B                      mov [ebx+edi], dl
    62 0000004B 4F                          dec edi
    63 0000004C C1E804                      shr eax, 4
    64 0000004F 89C2                        mov edx, eax
    65 00000051 E2E2                        loop .16based_4bits
    66                                  
    67                                  .readyToPrint:
    68 00000053 47                          inc edi
    69                                  
    70                                  .skipPrefix0:
    71 00000054 83FF08                      cmp edi, 8
    72                                  
    73 00000057 740F                        je .full0
    74                                  
    75                                  .goOnSkip:
    76 00000059 8A8F[00000000]              mov cl, [putIntBuff+edi]
    77 0000005F 47                          inc edi
    78 00000060 80F930                      cmp cl, '0'
    79 00000063 74EF                        je .skipPrefix0
    80 00000065 4F                          dec edi
    81 00000066 EB02                        jmp .putEachNum
    82                                  
    83                                  .full0:
    84 00000068 B130                        mov cl, '0'
    85                                  
    86                                  .putEachNum:
    87 0000006A 51                          push ecx
    88 0000006B E811000000                  call _PutChar
    89 00000070 83C404                      add esp, 4
    90 00000073 47                          inc edi
    91 00000074 8A8F[00000000]              mov cl, [putIntBuff+edi]
    92 0000007A 83FF08                      cmp edi, 8
    93 0000007D 7CEB                        jl .putEachNum
    94 0000007F 61                          popad
    95 00000080 C3                          ret
    96                                  
    97                                  
    98                                  
    99                                  
   100                                  ;----------将字符写入到光标所在处----------
   101                                  ; int8 charAscii
   102                                  global _PutChar
   103                                  _PutChar:
   104 00000081 60                          pushad
   105 00000082 66B81800                    mov ax, SELECTOR_VIDEO
   106 00000086 8EE8                        mov gs, ax
   107                                  
   108                                  ; 获取光标位置
   109                                      ; 高8位
   110 00000088 66BAD403                    mov dx, 0x03d4
   111 0000008C B00E                        mov al, 0x0e
   112 0000008E EE                          out dx, al
   113 0000008F 66BAD503                    mov dx, 0x03d5
   114 00000093 EC                          in al, dx
   115 00000094 88C4                        mov ah, al
   116                                  
   117                                      ; 低8位
   118 00000096 66BAD403                    mov dx, 0x03d4
   119 0000009A B00F                        mov al, 0x0f
   120 0000009C EE                          out dx, al
   121 0000009D 66BAD503                    mov dx, 0x03d5
   122 000000A1 EC                          in al, dx
   123                                  
   124 000000A2 6689C3                      mov bx, ax      ; bx保存光标位置
   125 000000A5 8B4C2424                    mov ecx, [esp+36]       ; charAscii，待打印字符
   126                                  
   127                                  ; 控制字符的特殊处理
   128 000000A9 80F90D                      cmp cl, 0xd
   129 000000AC 743C                        je .isCarriageReturn
   130 000000AE 80F90A                      cmp cl, 0xa
   131 000000B1 7437                        je .isLineFeed
   132 000000B3 80F908                      cmp cl, 0x8
   133 000000B6 7402                        je .isBackSpace
   134 000000B8 EB16                        jmp .putOther
   135                                  
   136                                  .isBackSpace:
   137                                  ; 退格键
   138 000000BA 664B                        dec bx
   139 000000BC 66D1E3                      shl bx, 1
   140                                  
   141 000000BF 6567C60720                  mov byte gs:[bx], 0x20
   142 000000C4 6643                        inc bx
   143                                  
   144 000000C6 6567C60707                  mov byte gs:[bx], 0x07
   145 000000CB 66D1EB                      shr bx, 1
   146 000000CE EB60                        jmp .setCursor
   147                                  
   148                                  .putOther:
   149                                  ; 可见字符
   150 000000D0 66D1E3                      shl bx, 1
   151 000000D3 6567880F                    mov gs:[bx], cl
   152 000000D7 6643                        inc bx
   153 000000D9 6567C60707                  mov byte gs:[bx], 0x07
   154 000000DE 66D1EB                      shr bx, 1
   155 000000E1 6643                        inc bx
   156 000000E3 6681FBD007                  cmp bx, 2000
   157 000000E8 7C46                        jl .setCursor
   158                                  
   159                                  .isLineFeed:
   160                                  .isCarriageReturn:
   161                                  ; 回车/换行
   162 000000EA 6631D2                      xor dx, dx
   163 000000ED 6689D8                      mov ax, bx
   164 000000F0 66BE5000                    mov si, 80
   165 000000F4 66F7F6                      div si
   166 000000F7 6629D3                      sub bx, dx
   167                                  
   168                                  .isCarriageReturnEnd:
   169 000000FA 6683C350                    add bx, 80
   170 000000FE 6681FBD007                  cmp bx, 2000
   171                                  
   172                                  .isLineFeedEnd:
   173 00000103 7C2B                        jl .setCursor
   174                                  
   175                                  .rollScreen:
   176                                  ; 滚动屏幕
   177 00000105 FC                          cld 
   178 00000106 B9C0030000                  mov ecx, 960
   179 0000010B BEA0800BC0                  mov esi, 0xc00b80a0
   180 00000110 BF00800BC0                  mov edi, 0xc00b8000
   181 00000115 F3A5                        rep movsd
   182                                  
   183 00000117 BB000F0000                  mov ebx, 3840
   184 0000011C B950000000                  mov ecx, 80
   185                                  
   186                                  .cls:
   187 00000121 6566C7032007                mov word gs:[ebx], 0x720
   188 00000127 83C302                      add ebx, 2
   189 0000012A E2F5                        loop .cls
   190 0000012C 66BB8007                    mov bx, 1920
   191                                  
   192                                  .setCursor:
   193                                  ; 设置光标
   194 00000130 66BAD403                    mov dx, 0x03d4
   195 00000134 B00E                        mov al, 0x0e
   196 00000136 EE                          out dx, al
   197 00000137 66BAD503                    mov dx, 0x03d5
   198 0000013B 88F8                        mov al, bh
   199 0000013D EE                          out dx, al
   200                                  
   201 0000013E 66BAD403                    mov dx, 0x03d4
   202 00000142 B00F                        mov al, 0x0f
   203 00000144 EE                          out dx, al
   204 00000145 66BAD503                    mov dx, 0x03d5
   205 00000149 88D8                        mov al, bl
   206 0000014B EE                          out dx, al
   207                                  
   208 0000014C 66BAD403                    mov dx, 0x03d4
   209 00000150 B00F                        mov al, 0x0f
   210 00000152 EE                          out dx, al
   211 00000153 66BAD503                    mov dx, 0x03d5
   212 00000157 88D8                        mov al, bl
   213 00000159 EE                          out dx, al
   214                                  
   215                                  .putCharDone:
   216 0000015A 61                          popad
   217 0000015B C3                          ret
   218                                  
   219                                  
   220                                  global _SetCursor:
   221                                  _SetCursor:
   222 0000015C 60                         pushad
   223 0000015D 668B5C2424                 mov bx, [esp+36]
   224                                  
   225 00000162 66BAD403                   mov dx, 0x03d4
   226 00000166 B00E                       mov al, 0x0e
   227 00000168 EE                         out dx, al
   228 00000169 66BAD503                   mov dx, 0x03d5
   229 0000016D 88F8                       mov al, bh
   230 0000016F EE                         out dx, al
   231                                  
   232                                  ;;;;;;; 2 再设置低8位 ;;;;;;;;;
   233 00000170 66BAD403                   mov dx, 0x03d4
   234 00000174 B00F                       mov al, 0x0f
   235 00000176 EE                         out dx, al
   236 00000177 66BAD503                   mov dx, 0x03d5 
   237 0000017B 88D8                       mov al, bl
   238 0000017D EE                         out dx, al
   239 0000017E 61                         popad
   240 0000017F C3                         ret
